'use strict'
// lesson 2

// Упражнение 1

// пример 1
/*
1. объявляются переменные a, b, c и d. При этом a и b присваивается значение 1.
2. сначала увеличивается значение переменной а на 1, то есть а=2, потому что префиксная форма записи,  а после значение переменной а присваивается переменной с. Поэтому с=2.
*/
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ:2

// пример 2
/*
3. сначала значение переменной b присваивается переменной d, потому что постфиксная форма записи, а после значение переменной b увеличивается на 1. Поэтому b=2, d=1.
*/
d = b++;
alert(d); // ответ 1.

// пример 3
/*
4. сначала увеличивается значение переменной а на 1, то есть а=3, потому что префиксная форма записи, а после значение переменной с увеличивается на 2. Поэтому  a=3, с=5.
*/
c = 2 + ++a;
alert(c); // ответ 5.

// пример 4
/*
5. сначала вычисляется значение переменной d, тое сть d = 4, потому что b имеет постфиксная форму записи, а после значение переменной b увеличивается на 1. b=3, d=4.
*/
d = 2 + b++;
alert(d); // ответ 4.

alert(a); // ответ 3, потому что а стал равен 3 в примере 3.
alert(b); // ответ 3, потому что b стал равен 3 в примере 4.


//Упражение 2
/* 1. Объявлены переменные a и x.
2. Переменной а присвоено значение 2.
3. Переменная х вычисляется по формуле, в которой сначала вычисляется выражение в скобках,
так как приоритет выполнения выше.
В скобках форма записи подразумевает увеличение значения переменной а в 2 раза, то есть а = 4.
4. вычисляется х, который равен сумме 1 и 4, то есть получается 5.
*/
let a = 2;
let x = 1 + (a *= 2);


//Упражнение 3

let a = +prompt("Введите любое число а");
let b = +prompt("Введите любое число b");
a = parseInt(a);
b = parseInt(b);
  if (a >= 0 && b >= 0) {
      alert("Разность чисел будет: " + (a - b));
  } else if (a < 0 && b < 0) {
      alert("Произведение чисел будет: " + (a * b));
  } else if ((a < 0 && b > 0) || (a > 0 && b < 0)) {
      alert("Сумма чисел будет: " + (a + b));
        };

//Упражнение 4

 * Функция для сложения двух параметров.
 * @param {number} a число
 * @param {number} b число
 * @returns {number}
 */
function sum(a, b) {
    return a + b;
}

/**
 * Функция для вычитания двух параметров.
 * @param {number} c уменьшаемое
 * @param {number} d вычитаемое
 * @returns {number}
 */
function diff(c, d) {
    return c - d;
}

/**
 * Функция для умножения двух параметров.
 * @param {number} e первый множитель
 * @param {number} f второй множитель
 * @returns {number} 
 */
function mult(e, f) {
    return e * f;
}

/**
 * Функция для деления двух параметров.
 * @param {number} j делимое
 * @param {number} i делитель
 * @returns {number} 
 */
function div(j, i) {
    return j / i;
}

// Упражнение 5
/**
 * Функция с тремя параметрами: первый операнд, второй операнд и операция
 * @param {number} arg1 первый операнд
 * @param {number} arg2 второй операнд
 * @param {*} operation операция +, -, * или /
 * @returns {number}
 */
function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case "+":
            return sum(arg1, arg2);
        case "-":
            return diff(arg1, arg2);
        case "*":
            return mult(arg1, arg2);
        case "/":
            return div(arg1, arg2);
    }
}
